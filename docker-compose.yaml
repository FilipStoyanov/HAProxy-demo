version: "3"
services:
  stocks:
    container_name: stocks
    build:
      dockerfile: DockerFile_stocks
    ports:
      - 8080:8080
    depends_on:
      - mariadb
    environment:
        DB_URL: jdbc:mariadb://mdb:3306/cfd
    networks: 
      - backend

  indices:
    container_name: indices
    build:
      dockerfile: DockerFile_indices
    ports:
      - 8081:8080
    depends_on:
      - mariadb
    networks: 
      - backend
  
  
  crypto:
    container_name: crypto
    build:
      dockerfile: DockerFile_crypto
    ports:
      - 8082:8080
    depends_on:
      - mariadb
    networks: 
      - backend

  commodities:
    container_name: commodities
    build:
      dockerfile: DockerFile_crypto
    ports:
      - 8083:8080
    depends_on:
      - mariadb
    networks: 
      - backend

  currencies:
    container_name: currencies
    build:
      dockerfile: DockerFile_currencies
    ports:
      - 8084:8080
    depends_on:
      - mariadb
    networks:
      - backend

  mariadb:
    build:
      dockerfile: DockerFile
    container_name: mdb
    restart: 'unless-stopped'
    ports:
      - 3306:3306
    environment:
      MARIADB_ROOT_PASSWORD: 123456789
    volumes:
      - C:\Dockerfile\db-on-docker-ms:/var/lib/mariadb
    networks:
      - backend

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - 2181:2181

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    ports:
      - 9092:9092
    depends_on:
      - zookeeper

  haproxy:
    image: haproxy:alpine
    ports:
      - "80:80"
      - "443:443"
      - "8404:8404"
    volumes:
      - ./templates/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - backend

networks:
  backend:
    driver: bridge